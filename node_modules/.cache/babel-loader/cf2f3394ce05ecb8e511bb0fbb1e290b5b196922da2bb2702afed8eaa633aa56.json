{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Documents/Projects/react-apps/appointment-planner-starting-v18/src/components/tile/Tile.js\";\nimport React from \"react\";\nimport styles from './Tile.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tile = props => {\n  const {\n    name,\n    description\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tile,\n    id: crypto.randomUUID(),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.bold,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), Object.values(description).map((value, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tile\",\n      children: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Tile;\nvar _c;\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Tile","props","name","description","className","tile","id","crypto","randomUUID","children","fileName","_jsxFileName","lineNumber","columnNumber","bold","Object","values","map","value","index","_c","$RefreshReg$"],"sources":["/Users/michael/Documents/Projects/react-apps/appointment-planner-starting-v18/src/components/tile/Tile.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from './Tile.module.css'\r\n\r\nexport const Tile = (props) => {\r\n\r\n  const {name, description} = props;\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className={styles.tile} id={crypto.randomUUID()}>\r\n      <button>x</button>\r\n      \r\n      <p className={styles.bold}>{name}</p>\r\n      {Object.values(description).map((value, index)=> (\r\n        <p key={index} className=\"tile\">{value}</p>\r\n      ))}\r\n      \r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAE7B,MAAM;IAACC,IAAI;IAAEC;EAAW,CAAC,GAAGF,KAAK;EAWjC,oBACEF,OAAA;IAAKK,SAAS,EAAEP,MAAM,CAACQ,IAAK;IAACC,EAAE,EAAEC,MAAM,CAACC,UAAU,EAAG;IAAAC,QAAA,gBACnDV,OAAA;MAAAU,QAAA,EAAQ;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAElBd,OAAA;MAAGK,SAAS,EAAEP,MAAM,CAACiB,IAAK;MAAAL,QAAA,EAAEP;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACpCE,MAAM,CAACC,MAAM,CAACb,WAAW,CAAC,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3CpB,OAAA;MAAeK,SAAS,EAAC,MAAM;MAAAK,QAAA,EAAES;IAAK,GAA9BC,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEV,CAAC;AAACO,EAAA,GAxBWpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}